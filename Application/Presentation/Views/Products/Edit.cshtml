@model Models.Product

@{
		ViewBag.Title = "ویرایش " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
		Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<hr />
			@Html.ValidationSummary(true)
			@Html.HiddenFor(model => model.Id)


			@Html.HiddenFor(model => model.ProductTypeId)
			@Html.HiddenFor(model => model.Code)

			@Html.HiddenFor(model => model.ImageUrl)
			@Html.HiddenFor(model => model.FileUrl)

			<div class="form-group">
				@Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Title)
					@Html.ValidationMessageFor(model => model.Title)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ProductGroupId, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("ProductGroupId", String.Empty)
					<dfn>این فیلد برای مطالب تازه ها تکمیل شود. <a href="/productgroups">مدیریت گروه بندی تازه ها</a></dfn>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsFree, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IsFree)
					@Html.ValidationMessageFor(model => model.IsFree)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Point, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Point)
					@Html.ValidationMessageFor(model => model.Point)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.FileUrl, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.Kendo().Upload().Name("fileUpload2").Multiple(false)
					@Html.ValidationMessageFor(model => model.FileUrl)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.VideoThumbnail, new { @class = "control-label col-md-2" })
				<div class="col-md-2">
					@Html.Kendo().Upload().Name("VideoThumbnail").Multiple(false)
					@Html.HiddenFor(model => model.VideoThumbnail)
				</div>
				<div class="col-md-4">
					@Html.ValidationMessageFor(model => model.VideoThumbnail)
					<dfn>تصویر کوچکی برای ویدئو وارد نمایید</dfn>
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Amount)
					<dfn>فیلد قیمت برای محصولات رایگان 0 وارد شود</dfn>
					@Html.ValidationMessageFor(model => model.Amount)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Body, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@(Html.Kendo().EditorFor(model => model.Body)
                      .Encode(false)
                      .HtmlAttributes(new { style = "height:400px" })
                      .ImageBrowser(imageBrowser => imageBrowser
                          .Image("~/Uploads/Editor/{0}")
                          .Read("Read", "ImageBrowser")
                          .Create("Create", "ImageBrowser")
                          .Destroy("Destroy", "ImageBrowser")
                          .Upload("Upload", "ImageBrowser")
                          .Thumbnail("Thumbnail", "ImageBrowser"))
                      .Tools(tools => tools
                          .Clear()
                          .Bold().Italic().Underline().Strikethrough()
                          .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                          .InsertUnorderedList().InsertOrderedList()
                          .Outdent().Indent()
                          .CreateLink().Unlink()
                          .InsertImage()
                          .SubScript()
                          .SuperScript()
                          .TableEditing()
                          .ViewHtml()
                          .Formatting()
                          .FontName()
                          .FontSize()
                          .FontColor().BackColor()

                      )
					)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ImageUrl, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.Kendo().Upload().Name("fileUpload").Multiple(false)
					@Html.ValidationMessageFor(model => model.ImageUrl)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.ExpireNumber, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ExpireNumber)

					<dfn>این فیلد فقط برای پرسش و پاسخ تکیمل شود</dfn>
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.IsVip, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IsVip)

					@Html.ValidationMessageFor(model => model.IsVip)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.IsPrevious, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IsPrevious)
					<dfn>این فیلد فقط برای رویدادها تکیمل شود</dfn>

					@Html.ValidationMessageFor(model => model.IsPrevious)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IsActive)
					@Html.ValidationMessageFor(model => model.IsActive)
				</div>
			</div>
			
			
			<div class="form-group">
				<div class="col-md-2">
				</div>
				<div class="col-md-10">
					@Html.EditorFor(model => model.IsInHome)
					@Html.LabelFor(model => model.IsInHome)
					@Html.ValidationMessageFor(model => model.IsInHome)
				</div>
			</div>

			@Html.HiddenFor(model => model.CreationDate)
			<div class="form-group">
				<div class="col-md-2">
				</div>
				<div class="col-md-10">
					@Html.EditorFor(model => model.IsInPromotion)
					@Html.LabelFor(model => model.IsInPromotion)
					@Html.ValidationMessageFor(model => model.IsInPromotion)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DiscountAmount, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.DiscountAmount)
					@Html.ValidationMessageFor(model => model.DiscountAmount)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Description)
					@Html.ValidationMessageFor(model => model.Description)
				</div>
			</div>

			<div class="form-group" id="buttons">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="ثبت" class="btn btn-primary" />
					@Html.ActionLink("بازگشت به فهرست", "Index", new { id = @ViewBag.productTypeId })
				</div>
			</div>
		</div>
}

